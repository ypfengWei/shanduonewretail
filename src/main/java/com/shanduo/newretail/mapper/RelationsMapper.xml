<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shanduo.newretail.mapper.RelationsMapper">
  <resultMap id="BaseResultMap" type="com.shanduo.newretail.entity.Relations">
    <id column="commodity_id" jdbcType="VARCHAR" property="commodityId" />
    <id column="category_id" jdbcType="INTEGER" property="categoryId" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="stock" jdbcType="INTEGER" property="stock" />
    <result column="sales_volume" jdbcType="INTEGER" property="salesVolume" />
    <result column="visible" jdbcType="INTEGER" property="visible" />
    <result column="is_deleted" jdbcType="BIT" property="isDeleted" />
  </resultMap>
  <sql id="Base_Column_List">
    commodity_id, category_id, user_id, stock, sales_volume, visible, is_deleted
  </sql>
 
 
  <select id="selectByPrimaryKey" parameterType="com.shanduo.newretail.entity.RelationsKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from relations
    where commodity_id = #{commodityId,jdbcType=VARCHAR}
      and category_id = #{categoryId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.shanduo.newretail.entity.RelationsKey">
    delete from relations
    where commodity_id = #{commodityId,jdbcType=VARCHAR}
      and category_id = #{categoryId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.shanduo.newretail.entity.Relations">
    insert into relations (commodity_id, category_id, user_id, 
      stock, sales_volume, visible, 
      is_deleted)
    values (#{commodityId,jdbcType=VARCHAR}, #{categoryId,jdbcType=INTEGER}, #{userId,jdbcType=VARCHAR}, 
      #{stock,jdbcType=INTEGER}, #{salesVolume,jdbcType=INTEGER}, #{visible,jdbcType=INTEGER}, 
      #{isDeleted,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.shanduo.newretail.entity.Relations">
    insert into relations
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="commodityId != null">
        commodity_id,
      </if>
      <if test="categoryId != null">
        category_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="stock != null">
        stock,
      </if>
      <if test="salesVolume != null">
        sales_volume,
      </if>
      <if test="visible != null">
        visible,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="commodityId != null">
        #{commodityId,jdbcType=VARCHAR},
      </if>
      <if test="categoryId != null">
        #{categoryId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="stock != null">
        #{stock,jdbcType=INTEGER},
      </if>
      <if test="salesVolume != null">
        #{salesVolume,jdbcType=INTEGER},
      </if>
      <if test="visible != null">
        #{visible,jdbcType=INTEGER},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.shanduo.newretail.entity.Relations">
    update relations
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="stock != null">
        stock = #{stock,jdbcType=INTEGER},
      </if>
      <if test="salesVolume != null">
        sales_volume = #{salesVolume,jdbcType=INTEGER},
      </if>
      <if test="visible != null">
        visible = #{visible,jdbcType=INTEGER},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=BIT},
      </if>
    </set>
    where commodity_id = #{commodityId,jdbcType=VARCHAR}
      and category_id = #{categoryId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.shanduo.newretail.entity.Relations">
    update relations
    set user_id = #{userId,jdbcType=VARCHAR},
      stock = #{stock,jdbcType=INTEGER},
      sales_volume = #{salesVolume,jdbcType=INTEGER},
      visible = #{visible,jdbcType=INTEGER},
      is_deleted = #{isDeleted,jdbcType=BIT}
    where commodity_id = #{commodityId,jdbcType=VARCHAR}
      and category_id = #{categoryId,jdbcType=INTEGER}
  </update>
  
  <select id="selectSellerCommodityType" 
	resultType="map">
	select
	category.category_name,category.id
	from relations join category on relations.category_id=category.id
	where user_id = #{0} and  relations.is_deleted = 0 and relations.visible=1 
	group by category_id
	order by category_id
  </select>
  
  <select id="selectCommodityStock" parameterType="java.lang.String"
	resultMap="BaseResultMap">
	select
	<include refid="Base_Column_List" />
	from relations
	where user_id = #{0} and commodity_id = #{1}
  </select>
  
  <update id="updateCommodityStock" parameterType="com.shanduo.newretail.entity.Relations">
    update relations
    <set>
        stock = #{stock,jdbcType=INTEGER},
        sales_volume = #{salesVolume,jdbcType=INTEGER}
    </set>
    where commodity_id = #{commodityId,jdbcType=VARCHAR}
      and user_id = #{userId,jdbcType=VARCHAR}
  </update>
  <update id="updateCommodityVisible" >
    update relations
    <set>
       visible = #{2}
    </set>
    where commodity_id = #{0}
      and user_id = #{1}
  </update>
  
  <select id="selectCommodityNum"  resultType="java.lang.Integer">
    select 
    count(commodity_id)
    from relations
    where user_id = #{0}
      and category_id = #{1} and visible=1 and is_deleted=0
  </select>
</mapper>