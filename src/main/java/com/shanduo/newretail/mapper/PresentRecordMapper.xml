<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shanduo.newretail.mapper.PresentRecordMapper">
  <resultMap id="BaseResultMap" type="com.shanduo.newretail.entity.PresentRecord">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="present_time" jdbcType="TIMESTAMP" property="presentTime" />
    <result column="amount_cash" jdbcType="DECIMAL" property="amountCash" />
    <result column="typeId" jdbcType="CHAR" property="typeid" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="opening_bank" jdbcType="VARCHAR" property="openingBank" />
    <result column="bank_name" jdbcType="VARCHAR" property="bankName" />
    <result column="card_number" jdbcType="VARCHAR" property="cardNumber" />
    <result column="state" jdbcType="CHAR" property="state" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
    <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, present_time, amount_cash, typeId, user_name, opening_bank, bank_name, 
    card_number, state, gmt_create, gmt_modified
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from present_record
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from present_record
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.shanduo.newretail.entity.PresentRecord">
    insert into present_record (id, user_id, present_time, 
      amount_cash, typeId, user_name, 
      opening_bank, bank_name, card_number, 
      state, gmt_create, gmt_modified
      )
    values (#{id,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, #{presentTime,jdbcType=TIMESTAMP}, 
      #{amountCash,jdbcType=DECIMAL}, #{typeid,jdbcType=CHAR}, #{userName,jdbcType=VARCHAR}, 
      #{openingBank,jdbcType=VARCHAR}, #{bankName,jdbcType=VARCHAR}, #{cardNumber,jdbcType=VARCHAR}, 
      #{state,jdbcType=CHAR}, #{gmtCreate,jdbcType=TIMESTAMP}, #{gmtModified,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.shanduo.newretail.entity.PresentRecord">
    insert into present_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="presentTime != null">
        present_time,
      </if>
      <if test="amountCash != null">
        amount_cash,
      </if>
      <if test="typeid != null">
        typeId,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="openingBank != null">
        opening_bank,
      </if>
      <if test="bankName != null">
        bank_name,
      </if>
      <if test="cardNumber != null">
        card_number,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="gmtCreate != null">
        gmt_create,
      </if>
      <if test="gmtModified != null">
        gmt_modified,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="presentTime != null">
        #{presentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="amountCash != null">
        #{amountCash,jdbcType=DECIMAL},
      </if>
      <if test="typeid != null">
        #{typeid,jdbcType=CHAR},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="openingBank != null">
        #{openingBank,jdbcType=VARCHAR},
      </if>
      <if test="bankName != null">
        #{bankName,jdbcType=VARCHAR},
      </if>
      <if test="cardNumber != null">
        #{cardNumber,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=CHAR},
      </if>
      <if test="gmtCreate != null">
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        #{gmtModified,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.shanduo.newretail.entity.PresentRecord">
    update present_record
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="presentTime != null">
        present_time = #{presentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="amountCash != null">
        amount_cash = #{amountCash,jdbcType=DECIMAL},
      </if>
      <if test="typeid != null">
        typeId = #{typeid,jdbcType=CHAR},
      </if>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="openingBank != null">
        opening_bank = #{openingBank,jdbcType=VARCHAR},
      </if>
      <if test="bankName != null">
        bank_name = #{bankName,jdbcType=VARCHAR},
      </if>
      <if test="cardNumber != null">
        card_number = #{cardNumber,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=CHAR},
      </if>
      <if test="gmtCreate != null">
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.shanduo.newretail.entity.PresentRecord">
    update present_record
    set user_id = #{userId,jdbcType=VARCHAR},
      present_time = #{presentTime,jdbcType=TIMESTAMP},
      amount_cash = #{amountCash,jdbcType=DECIMAL},
      typeId = #{typeid,jdbcType=CHAR},
      user_name = #{userName,jdbcType=VARCHAR},
      opening_bank = #{openingBank,jdbcType=VARCHAR},
      bank_name = #{bankName,jdbcType=VARCHAR},
      card_number = #{cardNumber,jdbcType=VARCHAR},
      state = #{state,jdbcType=CHAR},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  
   <select id="getPresentRecord" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from present_record
    where id = #{0}
    and state = #{1}
  </select>
  <select id="countPresentRecord" parameterType="java.lang.String" resultType="java.lang.Integer">
    select 
    count(id)
    from present_record
    where state = #{state,jdbcType=CHAR}
  </select>
  <select id="listPresentRecord" resultMap="BaseResultMap">
    select 
    id, user_id, present_time, amount_cash, typeId, user_name, opening_bank, bank_name, 
    card_number, state, gmt_create, gmt_modified
    from present_record
    where state = #{0}
    order by gmt_create
    limit #{1},#{2}
  </select>
  <select id="countUserPresentRecord" parameterType="java.lang.String" resultType="java.lang.Integer">
    select 
    count(id)
    from present_record
    where user_id = #{userId,jdbcType=VARCHAR}
  </select>
  <select id="listUserPresentRecord" resultMap="BaseResultMap">
    select 
    id, user_id, present_time, amount_cash, typeId, user_name, opening_bank, bank_name, 
    card_number, state, gmt_create, gmt_modified
    from present_record
    where user_id = #{0}
    order by gmt_create desc
    limit #{1},#{2}
  </select>
</mapper>